"""add_user_coupons_table

Revision ID: 51bd181c734c
Revises: 77f2e5558035
Create Date: 2025-10-30 04:01:15.657289

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '51bd181c734c'
down_revision: Union[str, None] = '77f2e5558035'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_coupons',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('store_id', sa.String(), nullable=False),
    sa.Column('store_name', sa.String(), nullable=False),
    sa.Column('discount_percent', sa.Integer(), nullable=False),
    sa.Column('cost_coins', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('redeemed', sa.Boolean(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('plant_scans',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('plant_id', sa.String(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('scan_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('health_score', sa.Float(), nullable=False),
    sa.Column('care_notes', sa.Text(), nullable=True),
    sa.Column('disease_detected', sa.String(), nullable=True),
    sa.Column('is_healthy', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['plant_id'], ['plants.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('plant_species', sa.Column('light_requirements', sa.String(), nullable=True))
    op.add_column('plant_species', sa.Column('water_frequency', sa.String(), nullable=True))
    op.add_column('plant_species', sa.Column('humidity_preference', sa.String(), nullable=True))
    op.add_column('plant_species', sa.Column('temperature_range', sa.String(), nullable=True))
    op.drop_index('ix_plant_species_scientific_name', table_name='plant_species')
    op.create_unique_constraint(None, 'plant_species', ['scientific_name'])
    op.add_column('plants', sa.Column('plant_icon', sa.String(), nullable=True))
    op.drop_column('plants', 'care_notes')
    op.drop_column('plants', 'image_url')
    op.drop_column('plants', 'common_name')
    op.drop_column('plants', 'location')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('plants', sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('plants', sa.Column('common_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('plants', sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('plants', sa.Column('care_notes', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_column('plants', 'plant_icon')
    op.drop_constraint(None, 'plant_species', type_='unique')
    op.create_index('ix_plant_species_scientific_name', 'plant_species', ['scientific_name'], unique=True)
    op.drop_column('plant_species', 'temperature_range')
    op.drop_column('plant_species', 'humidity_preference')
    op.drop_column('plant_species', 'water_frequency')
    op.drop_column('plant_species', 'light_requirements')
    op.drop_table('plant_scans')
    op.drop_table('user_coupons')
    # ### end Alembic commands ###
